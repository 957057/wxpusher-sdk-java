plugins {
    id 'java-library'  // 如果是 Java 项目
    id 'maven-publish' // 应用发布插件
}


//还有很多开发者用1.8，编译成低版本的，方便兼容
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

tasks.register('javadocJar', Jar) {
    archiveClassifier = 'javadoc'
    dependsOn javadoc
    from javadoc.destinationDir
}
publishing {

    publications {
        mavenJava(MavenPublication) {
            from components.java  // 发布 Java 组件（自动包含 JAR 包和 POM 文件）
            artifact sourcesJar
            artifact javadocJar

            artifactId = 'wxpusher'
            group = 'com.smjcco.wxpusher'
            version = '3.0.0'
            description = '微信消息实时推送服务[WxPusher]，可以通过API实时给个人微信推送消息，详情请看：http://wxpusher.zjiecode.com/docs'
        }
    }

    repositories {
        // 发布到本地 Maven 仓库（~/.m2/repository）
        mavenLocal()
    }
}

repositories {
    mavenCentral()
}
dependencies {
    implementation 'com.alibaba.fastjson2:fastjson2:2.0.56'
    testImplementation 'junit:junit:4.13.1'
}


// 配置生成校验文件
tasks.withType(AbstractPublishToMaven) {
    dependsOn tasks.withType(GenerateMavenPom)
}

tasks.withType(GenerateMavenPom).configureEach {
    doLast {
        def pomFile = destination
        def md5File = new File(pomFile.parent, pomFile.name + '.md5')
        def sha1File = new File(pomFile.parent, pomFile.name + '.sha1')

        // 生成 MD5 - 使用正确的格式
        ant.checksum(file: pomFile, algorithm: 'MD5', property: 'md5sum')
        md5File.text = ant.md5sum

        // 生成 SHA1 - 使用正确的格式
        ant.checksum(file: pomFile, algorithm: 'SHA1', property: 'sha1sum')
        sha1File.text = ant.sha1sum
    }
}

tasks.withType(PublishToMavenRepository).configureEach {
    doLast {
        publication.artifacts.each { artifact ->
            def file = artifact.file
            def md5File = new File(file.parent, file.name + '.md5')
            def sha1File = new File(file.parent, file.name + '.sha1')

            // 生成 MD5
            ant.checksum(file: file, algorithm: 'MD5', property: 'md5sum')
            md5File.text = ant.md5sum

            // 生成 SHA1
            ant.checksum(file: file, algorithm: 'SHA1', property: 'sha1sum')
            sha1File.text = ant.sha1sum
        }
    }
}