plugins {
    id 'java-library'  //  Java 项目
    id 'maven-publish' // 应用发布插件
    id 'signing' // 用于生成 .asc 文件
    id "com.kernelflux.maven.publish" version "1.0.0"
}


//还有很多开发者用1.8，编译成低版本的，方便兼容
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

tasks.register('javadocJar', Jar) {
    archiveClassifier = 'javadoc'
    dependsOn javadoc
    from javadoc.destinationDir
}
publishing {

    publications {
        mavenJava(MavenPublication) {
            from components.java  // 发布 Java 组件（自动包含 JAR 包和 POM 文件）
            artifact sourcesJar
            artifact javadocJar

            artifactId = 'wxpusher'
            group = 'com.smjcco.wxpusher'
            version = '3.0.0'

            pom {
                name = 'WxPusher消息推送平台 Java SDK'
                description = 'WxPusher消息推送平台 是一个使用微信公众号作为通道的，实时信息推送平台，你可以通过调用API的方式，把信息推送到微信上，无需安装额外的软件，即可做到信息实时通知。 你可以使用WxPusher来做服务器报警通知、抢课通知、抢票通知，信息更新提示等。'
                url = 'https://wxpusher.zjiecode.com/docs'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                // 开发者信息
                developers {
                    developer {
                        id = 'zjiecode'
                        name = 'zjiecode'
                        email = 'zjiecode@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git@github.com:wxpusher/wxpusher-sdk-java.git'
                    developerConnection = 'scm:git:git@github.com:wxpusher/wxpusher-sdk-java.git'
                    url = 'https://github.com/wxpusher/wxpusher-sdk-java'
                }
            }
        }

    }

    repositories {
        // 发布到本地 Maven 仓库（~/.m2/repository）
        mavenLocal()
    }
}

repositories {
    mavenCentral()
}
dependencies {
    implementation 'com.alibaba.fastjson2:fastjson2:2.0.56'
    testImplementation 'junit:junit:4.13.1'
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}

tasks.withType(GenerateMavenPom).configureEach {
    doLast {
        def pomFile = destination
        println("1,file=${pomFile}")
        if (pomFile.name.endsWith(".asc")) {
            return
        }
        def md5File = new File(pomFile.parent, pomFile.name + '.md5')
        def sha1File = new File(pomFile.parent, pomFile.name + '.sha1')

        // 生成 MD5 - 使用正确的格式
        ant.checksum(file: pomFile, algorithm: 'MD5', property: 'md5sum')
        md5File.text = ant.md5sum

        // 生成 SHA1 - 使用正确的格式
        ant.checksum(file: pomFile, algorithm: 'SHA1', property: 'sha1sum')
        sha1File.text = ant.sha1sum
    }
}

tasks.withType(PublishToMavenLocal).configureEach {
    doLast {
        publication.artifacts.each { artifact ->
            def file = artifact.file
            println("2,file=${file}")
            if (file.name.endsWith(".asc")) {
                return
            }
            def md5File = new File(file.parent, file.name + '.md5')
            def sha1File = new File(file.parent, file.name + '.sha1')

            // 生成 MD5
            ant.checksum(file: file, algorithm: 'MD5', property: 'md5sum')
            md5File.text = ant.md5sum

            // 生成 SHA1
            ant.checksum(file: file, algorithm: 'SHA1', property: 'sha1sum')
            sha1File.text = ant.sha1sum
        }
    }
}