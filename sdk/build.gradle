plugins {
    id 'java-library'  // 如果是 Java 项目
    id 'maven-publish' // 应用发布插件
}


//还有很多开发者用1.8，编译成低版本的，方便兼容
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.register('sourcesJar', Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

tasks.register('javadocJar', Jar) {
    archiveClassifier = 'javadoc'
    dependsOn javadoc
    from javadoc.destinationDir
}
publishing {

    publications {
        mavenJava(MavenPublication) {
            from components.java  // 发布 Java 组件（自动包含 JAR 包和 POM 文件）
            artifact sourcesJar
            artifact javadocJar

            artifactId = 'wxpusher'
            group = 'com.smjcco.wxpusher'
            version = '3.0.0'
            description = '微信消息实时推送服务[WxPusher]，可以通过API实时给个人微信推送消息，详情请看：http://wxpusher.zjiecode.com/docs'
        }
    }

    repositories {
        // 发布到本地 Maven 仓库（~/.m2/repository）
        mavenLocal()
    }
}

////包配置信息
//ext {
//    version = "2.1.8-local"
//    artifactId = "wxpusher-java-sdk"
//    projectUrl = "https://github.com/wxpusher/wxpusher-java-sdk.git"
//    description = "微信消息实时推送服务[WxPusher]，可以通过API实时给个人微信推送消息，详情请看：http://wxpusher.zjiecode.com/docs"
//    user = 'wxpusher'
//}

repositories {
    mavenCentral()
}
dependencies {
    implementation 'com.alibaba.fastjson2:fastjson2:2.0.56'
    testImplementation 'junit:junit:4.13.1'
}

//publishing {
//    publications {
//        Production(MavenPublication) {
//            from components.java
//            artifact sourcesJar
//            artifact javadocJar
//            groupId 'com.zjiecode'
//            artifactId this.ext.artifactId
//            version this.ext.version
//            pom.withXml {
//                //添加pom中缺失的信息，以发布到mavencenter
//                def projectNode = asNode()
//                projectNode.appendNode('name', this.ext.artifactId)
//                projectNode.appendNode('description', this.ext.description)
//                projectNode.appendNode('url', this.ext.projectUrl)
//                projectNode.appendNode('scm').appendNode("url", this.ext.projectUrl)
//                def license = projectNode.appendNode('licenses').appendNode("license")
//                license.appendNode('name', "MIT")
//                license.appendNode('url', "https://mit-license.org/")
//                def developer = projectNode.appendNode("developers").appendNode("developer")
//                developer.appendNode("id", "zjiecode")
//                developer.appendNode("email", "zjiecode@qq.com")
//            }
//        }
//    }
//}


//bintray {
//    user = this.ext.user
//    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
//    publications = ['Production']
//    pkg {
//        repo = 'maven'
//        name = this.ext.artifactId
//        userOrg = this.ext.user
//        licenses = ['MIT']
//        vcsUrl = this.ext.projectUrl
//        labels = ['wechat', 'push', 'notification', 'pushsdk']
//        publicDownloadNumbers = true
//        version {
//            desc = this.ext.description
//            vcsTag = this.ext.version
//            released = new Date()
//            name = this.ext.version
//        }
//    }
//}

//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
